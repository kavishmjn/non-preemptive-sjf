#include<stdio.h>
#include<conio.h>
#define max 30
int main()
{
int i,j,n,t,p[max],bt[max],wt[max],tat[max];
//p = process id
//bt = burst time
//wt = waiting time
//tat = turnaround time
float awt = 0,atat = 0;
FILE *fp1;
for(i=0;i<50;i++)   //initialize array with 0
       { bt[i]=0;}
    i=0;        //clean up and initialize LCV
    if ((fp1=fopen("CPU.txt","r"))==NULL)
    {
    printf("CPU.txt failed to open\n");
    return 1;
    }
    else
        while((fscanf(fp1,"%d",&bt[i]))!=EOF) //scanf and check EOF
        {   
            if(bt[i]<0)// checking whether burst time is not negative
            {
              printf("BURST TIME CAN'T BE LESS THAN ZERO");
              return 0; //exiting the code
            }
            p[i] = i;
            printf("process id %d with burst time %d\n",p[i],bt[i]);
            i++;
        }
    


//applying bubble sort to burst time(bt)
for(i=0;i<n;i++)
 {
 	for(j=0;j<n-i-1;j++)
 	{
 		if(bt[j]>bt[j+1])
 		{
 			t=bt[j];
 			bt[j]=bt[j+1];
 			bt[j+1]=t;
 		//arranging process no acc to burst time	
 			t=p[j];
 			p[j]=p[j+1];
 			p[j+1]=t;
		}
	}
 }
 printf("pid   \t wt    \tbt   \ttat\n");
 for(i=0;i<n;i++)
 {
 	wt[i] = 0;
 	tat[i]= 0;
 	for(j=0;j<i;j++)
 	{
 		wt[i]=wt[i]+bt[j];
	}
	tat[i] = wt[i]+bt[i];
	awt = awt+wt[i];
	atat = atat+tat[i];
	printf("%d\t %d \t\t\t %d \t\t\t %d\n",p[i],wt[i],bt[i],tat[i]);
 }
 awt = awt/n;
 atat = atat/n;
 printf("AVERAGE WAITING TIME  = %f\n",awt);
 printf("AVERAGE TURNAROUND TIME  = %f",atat);
}
